/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;

import org.junit.Rule;
import org.sql2o.*;
import java.util.Arrays;

public class PersonTest {
    String myName = "Henry";
    String myEmail = "lol@lol.com";
    @Rule
    public DatabaseRule database = new DatabaseRule();
    //check instance of person
    @Test
    public void person_instantiatesCorrectly_true() {
        Person testPerson = new Person(myName, myEmail);
        assertEquals(true, testPerson instanceof Person);
    }
    @Test
    public void getName_personInstantiatesWithName_Henry() {
      Person testPerson = new Person(myName, myEmail);
      assertEquals("Henry", testPerson.getName());
    }
  
    @Test
    public void getEmail_personInstantiatesWithEmail_String() {
      Person testPerson =  new Person(myName, myEmail);
      assertEquals("lol@lol.com", testPerson.getEmail());
    }

    @Test
    public void equals_returnsTrueIfNameAndEmailAreTheSame_true(){
        Person firstPerson=new Person(myName, myEmail);
        Person secondPerson=new Person(myName, myEmail);
        assertTrue(firstPerson.equals(secondPerson));
    }

    @Test
    public void save_insertsObjectIntoDatabase_person(){
        Person testPerson=new Person(myName, myEmail);
        testPerson.save();
        Person savedPerson = Person.all().get(0);
        assertEquals(testPerson.getId(), savedPerson.getId());
    }
    @Test
    public void all_returnsAllInstancesOfPerson_true() {
        Person firstPerson = new Person(myName, myEmail);
        firstPerson.save();
        Person secondPerson=new Person(myName, myEmail);
        secondPerson.save();
        assertEquals(true, Person.all().get(0).equals(firstPerson));
        assertEquals(true, Person.all().get(1).equals(secondPerson));
    }
    @Test 
    public void save_assignsIdToObject() {
        Person testPerson = new Person(myName, myEmail);
        testPerson.save();
        Person savedPerson = Person.all().get(0);
        assertEquals(testPerson.getId(), savedPerson.getId());
    }

    @Test
    public void find_returnsPersonWithSameId_secondPerson(){
        Person firstPerson=new Person(myName, myName);
        firstPerson.save();
        Person secondPerson= new Person(myName, myEmail);
        secondPerson.save();
        assertEquals(Person.find(secondPerson.getId()), secondPerson);

    }

    @Test
    public void getMonsters_retrievesAllMonstersFromDatabase_monstersList() {
      Person testPerson = new Person("Henry", "henry@henry.com");
      testPerson.save();
      FireMonster firstMonster = new FireMonster("smoknin", testPerson.getId());
      firstMonster.save();
      WaterMonster secondMonster = new WaterMonster("drip", testPerson.getId());
      secondMonster.save();
      Object[] monsters = new Object[] { firstMonster, secondMonster };
      assertTrue(testPerson.getMonsters().containsAll(Arrays.asList(monsters)));
    }
}
